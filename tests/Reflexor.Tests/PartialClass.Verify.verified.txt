namespace Test
{
    public partial struct PartialClassProxy
    {
        private readonly global::Test.PartialClass _target;
        
        public PartialClassProxy(global::Test.PartialClass target)
        {
            _target = target ?? throw new System.ArgumentNullException(nameof(target));
        }
        
        private readonly void ThrowInvalidOperationIfNotInitialized()
        {
            if (_target is null)
            {
                throw new global::System.InvalidOperationException("Proxy for 'Test.PartialClass' is uninitialized");
            }
        }
        
        public readonly int Part1
        {
            get
            {
                ThrowInvalidOperationIfNotInitialized();
                return GetPart1(_target);
                
                [global::System.Runtime.CompilerServices.UnsafeAccessor(global::System.Runtime.CompilerServices.UnsafeAccessorKind.Method, Name = "get_Part1")]
                extern static int GetPart1(global::Test.PartialClass target);
            }
            
            set
            {
                ThrowInvalidOperationIfNotInitialized();
                SetPart1(_target, value);
                
                [global::System.Runtime.CompilerServices.UnsafeAccessor(global::System.Runtime.CompilerServices.UnsafeAccessorKind.Method, Name = "set_Part1")]
                extern static void SetPart1(global::Test.PartialClass target, int value);
            }
        }
        
        public readonly string Part2
        {
            get
            {
                ThrowInvalidOperationIfNotInitialized();
                return GetPart2(_target);
                
                [global::System.Runtime.CompilerServices.UnsafeAccessor(global::System.Runtime.CompilerServices.UnsafeAccessorKind.Method, Name = "get_Part2")]
                extern static string GetPart2(global::Test.PartialClass target);
            }
            
            set
            {
                ThrowInvalidOperationIfNotInitialized();
                SetPart2(_target, value);
                
                [global::System.Runtime.CompilerServices.UnsafeAccessor(global::System.Runtime.CompilerServices.UnsafeAccessorKind.Method, Name = "set_Part2")]
                extern static void SetPart2(global::Test.PartialClass target, string value);
            }
        }
        
    }
}